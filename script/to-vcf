#!/uufs/chpc.utah.edu/common/home/u0875014/.linuxbrew/Cellar/python/3.6.5_1/bin/python3.6
import json
import sys
svs = []
copy_num = [0,1]
if len(sys.argv) >= 3:
	copy_num = [int(sys.argv[2])]
for line in open(sys.argv[1]):
	raw_line = line.strip()
	line = raw_line.split()
	try:
		parsed = json.loads(line[3])
		parsed["raw_data"] = "&".join(["{}:{}".format(k,v) for (k,v) in parsed.items()])
	except:
		parsed = {}
		parsed["left_pos"] = int(line[1]);
		parsed["right_pos"] = int(line[2]);
		parsed["chrom"] = line[0]
		parsed["raw_data"] = "N/A"
	if parsed.get("copy_num", copy_num[0]) not in copy_num:
		continue
	svs.append(parsed)

def chrom_idx(x):
	if x == 'X':
		return 22
	if x == 'Y':
		return 23
	return int(x) - 1

svs.sort(key = lambda x: (chrom_idx(x["chrom"]), x["left_pos"]))
print("""##fileformat=VCFv4.2
##FILTER=<ID=PASS,Description="All filters passed">
##fileDate=20180605
##reference=GRCh37
##contig=<ID=1,length=249250621>
##contig=<ID=2,length=243199373>
##contig=<ID=3,length=198022430>
##contig=<ID=4,length=191154276>
##contig=<ID=5,length=180915260>
##contig=<ID=6,length=171115067>
##contig=<ID=7,length=159138663>
##contig=<ID=8,length=146364022>
##contig=<ID=9,length=141213431>
##contig=<ID=10,length=135534747>
##contig=<ID=11,length=135006516>
##contig=<ID=12,length=133851895>
##contig=<ID=13,length=115169878>
##contig=<ID=14,length=107349540>
##contig=<ID=15,length=102531392>
##contig=<ID=16,length=90354753>
##contig=<ID=17,length=81195210>
##contig=<ID=18,length=78077248>
##contig=<ID=19,length=59128983>
##contig=<ID=20,length=63025520>
##contig=<ID=21,length=48129895>
##contig=<ID=22,length=51304566>
##contig=<ID=X,length=155270560>
##contig=<ID=Y,length=59373566>
##contig=<ID=MT,length=16569>
##INFO=<ID=END,Number=1,Type=Integer,Description="End position of the structural variant">
##INFO=<ID=SVTYPE,Number=1,Type=String,Description="Type of SV:DEL=Deletion, CON=Contraction, INS=Insertion, DUP=Duplication, INV=Inversion">
##INFO=<ID=SVLEN,Number=.,Type=Integer,Description="Difference in length between REF and ALT alleles">
##INFO=<ID=LIMODATA,Number=1,Type=String,Description="The Full Limo Metadata">
##FORMAT=<ID=GT,Number=1,Type=String,Description="Genotype">
#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	HG002""")
for sv in svs:
	info = {}
	info["SVLEN"] = sv["left_pos"] - sv["right_pos"]
	info["SVTYPE"] = "DEL"
	info["END"] = sv["right_pos"]
	info["LIMODATA"] = sv["raw_data"]
	info_str = []
	for (k,v) in info.items():
		info_str.append("{}={}".format(k,v))
	info_str = ";".join(info_str)
	gt = "./."
	if sv.get("copy_num") == 1:
		gt = "0/1"
	elif sv.get("copy_num") == 0:
		gt = "1/1"
	else:
		gt = "./."
	print(sv["chrom"],      #CHROM
		  sv["left_pos"],   #POS
		  ".",              #ID
		  "N",              #REF
		  "<DEL>",          #ALT
		  100.0,            #QUAL
		  ".",              #FILTER
		  info_str,			#INFO
		  "GT",
		  gt,
		  sep = '\t')


